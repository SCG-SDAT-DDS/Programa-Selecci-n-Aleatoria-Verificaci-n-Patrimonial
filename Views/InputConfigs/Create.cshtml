@model Transparencia.Models.InputConfig

@{
    ViewBag.Title = "Nueva tipo de Input Config";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>@ViewBag.Title</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">Inicio</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "InputConfigs")">Tipo de Input Config</a>
                </li>
                <li class="active breadcrumb-item">
                    <strong>@ViewBag.Title</strong>
                </li>
            </ol>
        </div>
    </div>
    <br />

    <div class="ibox">
        <div class="ibox-title">
            <p>
                <h2>@ViewBag.Title</h2>
            </p>
        </div>  
        
        <div class="ibox-content">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoInputId, "TipoInputId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipoInputId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoInputId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataTypeMIId, "DataTypeMIId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DataTypeMIId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DataTypeMIId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mask, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mask, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mask, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ayuda, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ayuda, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ayuda, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-w-m btn-primary" />
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-w-m btn-secondary" })
                    </div>
                </div>
            </div>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

