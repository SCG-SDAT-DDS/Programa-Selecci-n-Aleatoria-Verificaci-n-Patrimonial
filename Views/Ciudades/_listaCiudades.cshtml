@model PagedList<Transparencia.Models.Ciudad>

@{
    FiltrosCiudades filtros = ViewBag.Filtros != null ? ViewBag.Filtros as FiltrosCiudades : new FiltrosCiudades();
}



    <div id="listaCiudades">
        <p>
            @Html.ActionLink("Nuevo Municipio", "Create", null, new { @class = "btn btn-w-m btn-primary" })
        </p>

        <table class="table table-striped ">
            <thead>
                <tr>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.OrderPais">  @Html.DisplayNameFor(model => model.FirstOrDefault().Estado.Pais.NombrePais) <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.OrderEstado">  @Html.DisplayNameFor(model => model.FirstOrDefault().Estado.NombreEstado) <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.OrderNombre">  @Html.DisplayNameFor(model => model.FirstOrDefault().NombreCiudad) <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.OrderActivo">  @Html.DisplayNameFor(model => model.FirstOrDefault().Activo) <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        Acciones
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estado.Pais.NombrePais)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Estado.NombreEstado)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombreCiudad)
                    </td>
                    <td>
                        @if (item.Activo)
                        {
                            <span class="label label-primary BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "Ciudades")',@item.CiudadId)">Activo</span>
                        }
                        else
                        {
                            <span class="label label-danger BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "Ciudades")',@item.CiudadId)">Inactivo</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group">
                            @Html.ActionLink("Modificar", "Edit", new { id = item.CiudadId }, new { @class = "btn-white btn btn-xs" })
                            @Html.ActionLink("Detalles", "Details", new { id = item.CiudadId }, new { @class = "btn-white btn btn-xs" })
                        </div>
                    </td>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td>
                        <div class="form-group row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label>
                                    Mostrar
                                    <select class="input-sm filtrar" name="PerPage" id="mostrar">
                                        <option value="10">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                    Registros
                                </label>
                            </div>
                        </div>
                    </td>
                    <td colspan="7">
                        <div class="pagination float-right">
                            <label style="padding: 5px 10px;">@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>
                            <br />
                            <div id="pagedList" class="pagedList" data-otf-target="#listaOrganismos">

                                @Html.PagedListPager(Model, iPagina => Url.Action("Index", new
                                {
                                    iPagina,
                                    PerPage = ViewBag.PerPage,
                                    sOrder = ViewBag.Order,
                        Nombre = filtros.Nombre,
                                    Estado = filtros.Estado,
                                    Activo = filtros.Activo
                                }),
                        PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                        new AjaxOptions
                        {
                            HttpMethod = "get",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "listaCiudades",
                            OnBegin = "BeginClient",
                            OnComplete = "CompleteClient"
                        }))
                            </div>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>






