@using Transparencia.Models
@model ModificaUsuarioViewModel
@{
    ViewBag.Title = "Modificar Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
    IEnumerable<SelectListItem> listaRoles = (IEnumerable<SelectListItem>)ViewBag.ListaRoles;
    IEnumerable<SelectListItem> lstUnidadesAdministrativas = (IEnumerable<SelectListItem>)ViewBag.lstUnidadesAdministrativas;
    IEnumerable<SelectListItem> lstUnidadesAdministrativasForUa = (IEnumerable<SelectListItem>)ViewBag.lstUnidadesAdministrativas;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ConfirmPassword)
    @Html.HiddenFor(model => model.Password)
    @*@Html.HiddenFor(model => model.UserName)*@
    @*@Html.HiddenFor(model => model.Email)*@
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal">

        <div class="row wrapper border-bottom white-bg page-heading">
            <div class="col-lg-10">
                <h2>@ViewBag.Title</h2>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">Inicio</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("ListaUsuarios", "UsuariosAdmin")">Lista de Usuarios</a>
                    </li>
                    <li class="active breadcrumb-item">
                        <strong>@ViewBag.Title</strong>
                    </li>
                </ol>
            </div>
        </div>
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="ibox">
            <div class="ibox-title">
                <p>
                    <h2>@ViewBag.Title</h2>
                </p>
            </div>

            <div class="ibox-content">
                <div class="form-group">
                    @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <p class="form-control-static">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <p class="form-control-static">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </p>
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <p class="form-control-static">
                            ********
                        </p>
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="i-checks">
                            @Html.EditorFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group text-right">
                    <div class="col-md-offset-2 col-md-12">
                        <a id="aRegresar" href="@Url.Action("ListaUsuarios")" class="btn btn-w-m btn-secondary"><i class="fa fa-arrow-left"></i> Regresar</a>
                        <button type="submit" class="btn btn-w-m btn-primary"><i class="fa fa-save"></i> Guardar </button>
                        <button type="button" class="btn btn-w-m btn-success" data-toggle="modal" data-target="#rolesModal">  <i class="fa fa-plus-square"></i> Asignar Roles</button>

                    </div>
                </div>

                <div class="alert alert-success" role="alert" id="mensajeRol">

                </div>

                <div id="divRolesUsuario">
                    @{Html.RenderPartial("_RolesUsuario", Model);}
                </div>
                <br />
            </div>
            <br />
        </div>
    </div>

    <div class="modal fade" tabindex="-1" role="dialog" id="rolesModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">Asignar Roles</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="alert alert-success" role="alert" id="modalMessage">

                </div>

                <div class="modal-body">
                    <label for="roles" class="control-label col-sm-6">Seleccione el Rol</label>
                    <div class="col-sm-12">
                        @Html.DropDownList("Rol", listaRoles, htmlAttributes: new { @class = "form-control" })
                    </div>
                    @if (!ViewBag.esEnlace)
                    {
                        <div class="form-group" id="divOrganismos">
                            <div class="form-group col-md-10">
                                @Html.Label("Tipo organismo", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("TipoOrganismoId", new SelectList(ViewBag.TipoOrganismoId, "TipoOrganismoId", "Nombre", ViewBag.TipoOrganismoIds), "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("TipoOrganismoId", "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-10">
                                @Html.Label("Organismos", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("OrganismoID", new SelectList(ViewBag.OrganismoID, "OrganismoID", "NombreOrganismo", ViewBag.OrganismoIDs), "Seleccione...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("OrganismoID", "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-10" id="divUA">
                                @Html.Label("Unidad Administrativa", htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("UnidadAdministrativaId", lstUnidadesAdministrativas, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("UnidadAdministrativaId", "", new { @class = "text-danger" })
                            </div>

                        </div>

                       
                    }
                    else
                    {
                        <div class="form-group col-md-10">

                            @Html.Label("Organismo/Dependencia", htmlAttributes: new { @class = "control-label" })
                            <input autocomplete="off" class="form-control" id="Organimos" name="Organimos" type="text" value="@ViewBag.Organismo" readonly="readonly">
                        </div>

                        <div class="form-group col-md-10">
                            @Html.Label("Unidad Administrativa", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("UnidadAdministrativaId", lstUnidadesAdministrativas, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessage("UnidadAdministrativaId", "", new { @class = "text-danger" })
                        </div>
                    }
                    <br />
                </div>

                <div class="modal-footer">
                   
                    <button type="button" class="btn btn-w-m btn-primary" data-asigna-url="@Url.Action("AsignaRolAUsuario", "UsuariosAdmin")" id="btnAsignar">Asignar</button>
                    <button type="button" class="btn btn-w-m btn-secondary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="modal-header">
                    <h2 class="modal-title" id="myModalLabel">Eliminar Rol de Usuario</h2>
                </div>

                <div class="modal-body">
                    <h3>
                        <p>Esta a punto de eliminar el rol <span class="rolModal-confirm"></span> del usuario.</p>
                        <p><strong>¿Desea continuar?</strong></p>
                    </h3>
                </div> 

                <div class="modal-footer">
                    <button type="button" class="btn btn-w-m btn-secondary" data-dismiss="modal" id="btnCancelRemove">Cancelar</button>
                    <button type="button" class="btn btn-w-m btn-danger btn-ok" id="btnEliminaRol">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}
@section Scripts {
    <script src="~/Scripts/UsuariosRoles.js"></script>

    @Scripts.Render("~/plugins/iCheck")

    <script>
        $(document).ready(function () {
            $('#divUA').hide();
             $('#divOrganismos').hide();
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
              // verificamos el enlace para mostrar o ocutlar
            //if ($('#Rol').val() == 'Administrador') {
            //    $('#divOrganismos').hide();
            //}
        });

        
        //Seleccionando el rol
          $("#Rol").change(function () {
            ShowLoading();
              var ComboCnanged = $(this).val();
              var div = $('#divOrganismos');
              var divUa = $('#divUA');
              divUa.hide();
              div.hide();
              if (ComboCnanged == 'Unidad Administrativa') {
                  formtarForUA();
                  div.show();
                  divUa.show();
                  HideLoading();

              } else if (ComboCnanged == 'Enlace') {
                  formtarForUA();
                  div.show();
                  HideLoading();
                    
              }
              //else {
                  
              //    HideLoading();
              //}
              HideLoading();

          });
        function formtarForUA() {
            var ComboUA = $('#UnidadAdministrativaId');
            ComboUA.empty(); // remove any existing options
            ComboUA.append($('<option value>Seleccione...</option>'));
            var comboOrganismo = $('#OrganismoID');
            comboOrganismo.empty(); // remove any existing options
            comboOrganismo.append($('<option value>Seleccione...</option>'));
            $("#TipoOrganismoId").prop("selectedIndex", 0).val(); 
        }
        function lookingForUA() {
            //cargamos el loading
            ShowLoading();
            var ComboCnanged = $("#OrganismoID").val();
            var Sub = $('#UnidadAdministrativaId');
             //buscamos por ajax
            $.ajax({
                url: "@Url.Action("GetUAByOrganismoId", "UnidadesAdministrativas")",
                dataType: "json",
                type: "GET",
                data: {
                    'iId': ComboCnanged
                },
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.Encontro) {
                        Sub.empty(); // remove any existing options
                        Sub.append($('<option value>Seleccione...</option>'));
                        $.each(data.data, function (index, item) {
                            Sub.append($('<option></option>').text(item.NombreUnidad).val(item.UnidadAdministrativaId));
                        });
                        //ComboActivo.val(iiActivoId);
                        HideLoading();

                    } else {

                        Sub.empty(); // remove any existing options
                        Sub.append($('<option value>Seleccione...</option>'));
                        HideLoading();
                    }
                },
                error: function (error) {
                    console.log(error);
                    HideLoading();
                }
            });
            //escondemos el loading
           // HideLoading();
        }
        //buscar organismo por tipo de organimso
         $("#TipoOrganismoId").change(function () {
                //sub
            ShowLoading();
            //$('#asdsa').empty();
            //$('#asdas').append($('<option value>Seleccione...</option>'));
                var ComboCnanged = $(this).val();
                var Sub = $('#OrganismoID');
                if (ComboCnanged.length > 0) {
                    $.ajax({
                        url: "@Url.Action("GetOrganismoByTipoOrganismoId", "Organismos")",
                        dataType: "json",
                        type: "GET",
                        data: {
                            'iId': ComboCnanged
                        },
                        cache: false,
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            if (data.Encontro) {
                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                $.each(data.data, function (index, item) {
                                    Sub.append($('<option></option>').text(item.NombreOrganismo).val(item.OrganismoID));
                                });
                                //ComboActivo.val(iiActivoId);
                                 HideLoading();

                            } else {

                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                 HideLoading();
                            }
                        },
                        error: function (error) {
                            console.log(error);
                              HideLoading();
                        }
                    });
                } else {
                    ComboActivo.empty(); // remove any existing options
                    Sub.append($('<option value>Seleccione...</option>'));
                    Sub.attr("title", "Sin datos seleccionados");
                    HideLoading();
                }

         });

        //Organismo
        $("#OrganismoID").change(function () {
             //si el rol es tipo de unidad administrativa buscamos UA
            //agarramos el valor del rol
            var valorCombo = $("#Rol").val();
            if (valorCombo == 'Unidad Administrativa') {
                lookingForUA();
            }
         });
    </script>
}
