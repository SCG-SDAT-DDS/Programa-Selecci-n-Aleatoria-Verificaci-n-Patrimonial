@model PagedList<Transparencia.Models.PlantillaHistory>

@{
    var Enlace = HMTLHelperExtensions.GetRoles(User.Identity.Name, "Enlace");
}

<div id="lista" >
    <table class="table  table-sm">
        <thead class="table-active">
            <tr>
                <th class="text-center">
                    <label>Ejercicio</label>
                </th>
                <th class="text-center">
                    <label>Tipo de frecuencia</label>
                </th>
                <th class="text-center">
                    <label>Frecuencia</label>
                </th>
                @if (!Enlace)
                {
                 <th class="text-center">
                     <label>Dependencia</label>
                 </th>
                }
                <th class="text-center">
                    <label>Fecha Creación</label>
                </th>
                <th class="text-center">
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

        <tr>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Periodo.NombrePeriodo)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.SysFrecuencia)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.SysNumFrecuenciaToString)
            </td>
            @if (!Enlace)
            {
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Organismo.NombreOrganismo)
                </td>
            }
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.FechaCreacionToString)
            </td>
            <td>
                <div class="text-center">
                    <a href="@Url.Action("IndexDatosChosenPlantillas", new { PlantillaHistoryId = item.PlantillaHistoryId, plantillaId = item.PlantillaId})" class="dropdown-item" title="Ver información"><i class="fa fa-list"></i> Ver selección</a>
                </div>
            </td>
        </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>
                    <div class="form-group row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <label>
                                Mostrar
                                @{
                                    var porPage = ViewBag.PerPage;
                                    string per10 = porPage == 10 ? "selected" : "";
                                    string per25 = porPage == 25 ? "selected" : "";
                                    string per50 = porPage == 50 ? "selected" : "";
                                    string per100 = porPage == 100 ? "selected" : "";
                                }
                                <select class="input-sm filtrar" name="PerPage" id="mostrar">
                                    <option @per10 value="10">10</option>
                                    <option @per25 value="25">25</option>
                                    <option @per50 value="50">50</option>
                                    <option @per100 value="100">100</option>
                                </select>
                                Registros
                            </label>
                        </div>
                    </div>
                </td>
                <td colspan="7">

                    <div class="pagination float-right">
                        <div id="pagedList" class="pagedList" data-otf-target="#lista">
                            <label style="padding: 5px 10px;">@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>

                            @Html.PagedListPager(Model, iPagina => Url.Action("IndexHistory", new { iPagina, PerPage = ViewBag.PerPage, sOrder = ViewBag.Order, plantillaId = ViewBag.plantillaId }), PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                       new AjaxOptions
                       {
                           HttpMethod = "get",
                           InsertionMode = InsertionMode.Replace,
                           UpdateTargetId = "lista",
                           OnBegin = "BeginClient",
                           OnComplete = "CompleteClient"
                       }))
                        </div>
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
