@model IEnumerable<Transparencia.Helpers.AuxPlantillas>

@{
    ViewBag.Title = "Listado de Plantillas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    FiltrosPlantilla filtros = ViewBag.Filtros != null ? ViewBag.Filtros as FiltrosPlantilla : new FiltrosPlantilla();
    string show = ((int)ViewBag.PerPage).ToString();
    var Enlace = HMTLHelperExtensions.GetRoles(User.Identity.Name, "Enlace");
}


@using (Ajax.BeginForm(
    new AjaxOptions
    {
        HttpMethod = "get",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "lista",
        OnBegin = "BeginClient",
        OnComplete = "CompleteClient"
    }))
{

    @Html.Hidden("cookieValue")
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>@ViewBag.Title</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">Inicio</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Plantillas")">Plantillas</a>
                </li>
                <li class="active breadcrumb-item">
                    <strong>@ViewBag.Title</strong>
                </li>
            </ol>
        </div>
    </div>
    <br />

    @*<div class="col-lg-12">
        <div class="ibox">*@
    <div class="wrapper wrapper-content animated fadeInRight ecommerce">

        <div class="ibox-content m-b-sm border-bottom">
            <div class="row">

                @if (!Enlace)
                {
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Label("Nombre corto")
                            <div class="input-group m-b">
                                @Html.TextBoxFor(model => filtros.NombreCorto, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre Corto", autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                }

                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Label("Nombre de la plantilla")
                        <div class="input-group m-b">
                            @Html.TextBoxFor(model => filtros.NombreLargo, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre de plantilla", autocomplete = "off" })
                        </div>
                    </div>
                </div>


                    
                @*@if (!Enlace)
                {
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstOrDefault().NombreTabla)
                            <div class="input-group m-b">
                                @Html.TextBoxFor(model => filtros.NombreTabla, htmlAttributes: new { @class = "form-control", @placeholder = "Nombre de la tabla", autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                }*@

                @if (!Enlace)
                {
                    <div class="col-sm-4">
                        <div class="form-group">
                            @Html.Label("Activo")
                            <div class="input-group m-b">
                                @Html.DropDownListFor(model => filtros.ActivoNull, new SelectList(ViewBag.CmbActivo, "Value", "Text"), "Seleccione...", new { @class = "form-control m-b" })
                            </div>
                        </div>
                    </div>
                }
                @if (!Enlace)
                {
                    <div class="col-sm-4">
                        <div class="form-group">

                            @Html.LabelFor(m => m.FirstOrDefault().Publicado)
                            <div class="input-group m-b">
                                @Html.DropDownListFor(model => filtros.EstatusNull, new SelectList(ViewBag.CmbEstado, "Value", "Text"), "Seleccione...", new { @class = "form-control m-b" })
                            </div>
                        </div>
                    </div>
                }

                @*aqui empieza Leyes*@
                @*<div class="col-sm-4">
                    <div class="form-group">

                        @Html.Label("Módulo")
                        <div class="input-group m-b">
                            @Html.DropDownListFor(model => filtros.LeyId, new SelectList(ViewBag.LeyId, "LeyId", "Nombre", ViewBag.LeyIds), "Seleccione...", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>*@
                @*<div class="col-sm-4">
                    <div class="form-group">
                        @Html.Label("Sub Módulo")
                        <div class="input-group m-b">
                            @Html.DropDownListFor(model => filtros.ArticuloId, new SelectList(ViewBag.ArticuloId, "ArticuloId", "Nombre", ViewBag.ArticuloIds), "Seleccione...", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>*@
                @*<div class="col-sm-4">
                    <div class="form-group">
                        @Html.Label("Actividades sustantibles")
                        <div class="input-group m-b">
                            @Html.DropDownListFor(model => filtros.FraccionId, new SelectList(ViewBag.FraccionId, "FraccionId", "Nombre", ViewBag.FraccionIds), "Seleccione...", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>*@
                <div class="col-sm-4">
                    <div class="form-group">
                        @Html.Label("Ejercicio")
                        <div class="input-group m-b">
                            @Html.DropDownListFor(model => filtros.PeriodoId, new SelectList(ViewBag.LstPeriodo, "Value", "Text"), "Seleccione...", new { @class = "form-control m-b" })
                        </div>
                    </div>
                </div>

                @*<div class="col-sm-4">

                    <div class="form-group">

                        @Html.Label("Período desde")
                        <div class="input-group m-b">
                            @Html.EditorFor(model => filtros.PeriodoDesde, new { htmlAttributes = new { @class = "form-control datefield", @placeholder = "Período Desde", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>*@
                @*<div class="col-sm-4">
                    <div class="form-group">
                        @Html.Label("Período hasta")
                        <div class="input-group m-b">
                            @Html.EditorFor(model => filtros.PeriodoHasta, new { htmlAttributes = new { @class = "form-control datefield", @placeholder = "Período Desde", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>*@
            </div>
            <br />

            <div class="row justify-content-end">
                <div class="col-sm-4 text-right">
                    <a class="btn btn-w-m btn-secondary" href="@Url.Action("Index")"><i class="fa fa-filter"></i> Limpiar</a>
                    <button class="btn btn-w-m btn-primary" type="submit"><i class="fa fa-search"></i> Buscar</button>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="form-group row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                @Html.Partial("_lista", Model)
                                @Html.Hidden("sOrder")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="ibox-title">
                <p>
                    @Html.ActionLink("Nueva Plantilla", "Create", null, new { @class = "btn btn-w-m btn-primary" })
                </p>
            </div>*@
        @*<div class="ibox-content">*@
    </div>
    <br />
}

<!--Modal para el campo -->
<div class="modal fade bd-example-modal-lg" id="modalDescargar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Descargar Información <b id="ModalDetailCampo"></b> </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="listadoDatosDescargar">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Regresar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/Scripts/PaginadorOrder.js"></script>
    @Scripts.Render("~/bundles/jqueryUI")
    <script src="~/Scripts/DatePickerReady.js"></script>

    <script>
        $(function () {
            //console.log("ready!");
            //$('[data-toggle="tooltip"]').tooltip()
            $('[data-toggle="popover"]').popover();

        });
        //probando ShowDonaloader
        var _tmr;
        function CookiesForDownloader(cookieValue) {
             // save timestamp in hidden field
                //$('#cookieValue').val(Date.now().toString());
                $('#cookieValue').val(cookieValue);

                // show animation
                 ShowLoading();

                // start timer to wait for cookie
                _tmr = window.setInterval(function () {
                    var _str = 'dlc=' +  $('#cookieValue').val();
                    if (document.cookie.indexOf(_str) !== -1) {
                        // hide animation
                       HideLoading();
                    }
                }, 100);
        }
        //Probadno showDonloader

        function publicarOcultar(idPlantilla) {
            var msg = '';
            var estatus = '';
            var textoButton = '';
            if ($("#lbEstatus" + idPlantilla).hasClass('btn-primary')) {
                msg = '¡El estado de la plantilla pasará de publicado a diseño';
                estatus = 'publicado';
                textoButton = 'Diseñar';
                //publicado = false;
            } else {
                msg = '¡El estado de la plantilla pasará de diseño a publicado';
                estatus = 'diseño';
                textoButton = 'Publicar';
                //publicado = true;
            }
             Swal.fire({
                 title: '¿Esta seguro que desea cambiar el estatus de ' + estatus+' de la plantilla?',
                 text: msg,
                icon: 'warning',
                showCancelButton: true,
                 confirmButtonText: textoButton,
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {
                     $.post("@Url.Action("PublicarOcultar","Plantillas")", {id: idPlantilla })
                         .done(function (data) {
                             if ($("#lbEstatus" + idPlantilla).hasClass('btn-warning')) {
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-warning").addClass('btn-primary');
                                 $("#lbEstatus" + idPlantilla).text('P');
                                 $("#lbEstatus" + idPlantilla).prop('title', 'Publicado');
                                 //quitamos botones
                                 $("#aEditHref" + idPlantilla).remove();
                                 $("#aConfHref" + idPlantilla).remove();

                             } else {
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-primary").addClass('btn-warning');
                                 $("#lbEstatus" + idPlantilla).text('D');
                                 $("#lbEstatus" + idPlantilla).prop('title', 'Diseño');
                                 //agreamos los botones
                                 var aConfHref = 'aConfHref' + idPlantilla;
                                 var aEditHref = 'aEditHref' + idPlantilla;
                                 var urlConfigurarCampos = '@Url.Action("ConfigurarCampos", new { id = "-1" })';
                                 var urlEditar = '@Url.Action("Edit", new { id = "-1" })';
                                 urlConfigurarCampos = urlConfigurarCampos.replace("-1", idPlantilla);
                                 urlEditar = urlEditar.replace("-1", idPlantilla);
                                 $("#dEditDiv" + idPlantilla).html('<a id="' + aConfHref + '" href="' + urlConfigurarCampos + '" class="dropdown-item" title="Configurar Campos"><i class="fa fa-tasks"></i> Configurar Campos</a>');
                                 $("#dEditDiv" + idPlantilla).append('<a id="' + aEditHref + '" href="' + urlEditar + '" class="dropdown-item" title="Editar"><i class="fa fa-pencil-square"></i> Editar</a>');


                             }
                             if ($("#fa" + idPlantilla).hasClass('fa-eye')) {
                                 $("#fa" + idPlantilla).removeClass("fa-eye").addClass('fa-eye-slash');
                                 document.getElementById('ahref' + idPlantilla).title = 'Diseñar';
                                 document.getElementById('ahrefText' + idPlantilla).innerHTML = 'Diseñar';
                             } else {
                                 $("#fa" + idPlantilla).removeClass("fa-eye-slash").addClass('fa-eye');
                                 document.getElementById('ahref' + idPlantilla).title = 'Publicar';
                                 document.getElementById('ahrefText' + idPlantilla).innerHTML = 'Publicar';
                             }
                        Swal.fire(
                            '¡Se cambio correctamente!',
                            'Se cambio el estado correctamente a ' + textoButton,
                            'success'
                        )
                    }).fail(function () {
                        Swal.fire('Error','Ocurrio un error al momento de modificar el estado','error')
                    });

                    // For more information about handling dismissals please visit
                    // https://sweetalert2.github.io/#handling-dismissals
                }
                //else if (result.dismiss === Swal.DismissReason.cancel) {
                //}
            });

        }
        function Inactivar(idPlantilla) {
            var msg = '¡Esta seguro que desea inactivar la plantilla';
             Swal.fire({
                 title: 'Inactivar plantilla',
                 text: msg,
                icon: 'danger',
                showCancelButton: true,
                 confirmButtonText: 'Inactivar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {
                     $.post("@Url.Action("Inactivar", "Plantillas")", {id: idPlantilla })
                         .done(function (data) {
                             if (data.Activo == true && data.Encontro == true) {
                                 var aConfHref = 'aConfHref' + idPlantilla;
                                 var aEditHref = 'aEditHref' + idPlantilla;
                                 var ahref = 'ahref' + idPlantilla;
                                 var faicon = 'fa' + idPlantilla;
                                 var urlConfigurarCampos = '@Url.Action("ConfigurarCampos", new { id = "-1" })';
                                 var urlEditar = '@Url.Action("Edit", new { id = "-1" })';
                                 urlConfigurarCampos = urlConfigurarCampos.replace("-1", idPlantilla);
                                 urlEditar = urlEditar.replace("-1", idPlantilla);

                                 $("#dEditDiv" + idPlantilla).html('<a id="' + aConfHref + '" href="' + urlConfigurarCampos + '" class="dropdown-item pt-2 pb-2" title="Configurar Campos"><i class="fa fa-tasks"></i> Configurar Campos</a>');
                                 $("#dEditDiv" + idPlantilla).append('<a id="' + aEditHref + '" href="' + urlEditar + '" class="dropdown-item pt-2 pb-2" title="Editar"><i class="fa fa-pencil-square"></i> Editar Plantilla</a>');
                                 // item.Publicado == true ? "Diseñar" : "Publicar";
                                 var Status = data.Publicado == true ? "Diseñar" : "Publicar";
                                 $("#dPublicDiv" + idPlantilla).append('<a id="'+ahref+'" onclick="publicarOcultar('+ idPlantilla +')" class="dropdown-item pt-2 pb-2" title="Publicar"><i id="' + faicon + '" class="fa fa-eye"></i> '+ Status +'</a>');
                                 //activamos
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-warning");
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-primary");
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-danger");

                                 $("#lbEstatus" + idPlantilla).addClass("btn-warning");
                                 $("#lbEstatus" + idPlantilla).text('D');
                                 $("#lbEstatus" + idPlantilla).prop('title', 'Diseño');

                                 //cambiamos el diseño del boton
                                 //$("#aDeleteHref" + idPlantilla).removeClass("btn-success");
                                 //$("#aDeleteHref" + idPlantilla).addClass("btn-danger");
                                 $("#aDeleteHref" + idPlantilla + " i").removeClass("fa-undo");
                                 //$("#aDeleteHref" + idPlantilla).html("");
                                 $("#aDeleteHref" + idPlantilla+" i").addClass("fa-trash");

                                 //Cambiamos el nombre de los bottones
                                 $("#aSpanInactivar" + idPlantilla).html("Inactivar");

                             } else {
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-warning");
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-primary");
                                 $("#lbEstatus" + idPlantilla).removeClass("btn-danger");

                                 $("#lbEstatus" + idPlantilla).addClass("btn-danger");
                                 $("#lbEstatus" + idPlantilla).text('X');
                                 $("#lbEstatus" + idPlantilla).prop('title', 'Inactivo');

                                //$("#aDeleteHref" + idPlantilla).removeClass("btn-danger");
                                 //$("#aDeleteHref" + idPlantilla).addClass("btn-success");
                                 $("#aDeleteHref" + idPlantilla+" i").removeClass("fa-trash");
                                 $("#aDeleteHref" + idPlantilla + " i").addClass("fa-undo");

                                 $("#ahref" + idPlantilla).remove();
                                 $("#aEditHref" + idPlantilla).remove();
                                 //$("#aDeleteHref" + idPlantilla).remove();
                                 $("#aConfHref" + idPlantilla).remove();
                                 //Cambiamos el nombre de los bottones
                                 $("#aSpanInactivar" + idPlantilla).html("Activar");
                             }

                        Swal.fire(
                            '¡Se inactivo la plantilla!',
                            'La plantilla ha sido inactivada',
                            'success'
                        )
                    }).fail(function () {
                        Swal.fire(
                            'Error',
                            'Ocurrio un error al momento de inactivar',
                            'error'
                        )
                    });

                    // For more information about handling dismissals please visit
                    // https://sweetalert2.github.io/#handling-dismissals
                }
                //else if (result.dismiss === Swal.DismissReason.cancel) {
                //}
            });

        }



        $("#filtros_LeyId").change(function () {
                //sub
            ShowLoading();
            $('#filtros_FraccionId').empty();
            $('#filtros_FraccionId').append($('<option value>Seleccione...</option>'));
                var ComboCnanged = $(this).val();
                var Sub = $('#filtros_ArticuloId');
                if (ComboCnanged.length > 0) {
                    $.ajax({
                        url: "@Url.Action("GetArticulosByLeyId", "Plantillas")",
                        dataType: "json",
                        type: "GET",
                        data: {
                            'iId': ComboCnanged
                        },
                        cache: false,
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            console.log(data.data);
                            if (data.Encontro) {
                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                $.each(data.data, function (index, item) {
                                    Sub.append($('<option></option>').text(item.Nombre).val(item.ArticuloId));
                                });
                                //ComboActivo.val(iiActivoId);
                                 HideLoading();

                            } else {

                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                 HideLoading();
                            }
                        },
                        error: function (error) {
                            console.log(error);
                              HideLoading();
                        }
                    });
                } else {
                    ComboActivo.empty(); // remove any existing options
                    Sub.append($('<option value>Seleccione...</option>'));
                    Sub.attr("title", "Sin datos seleccionados");
                    HideLoading();
                }

        });


        $("#filtros_ArticuloId").change(function () {
                //sub
                ShowLoading();
                var ComboCnanged = $(this).val();
                var Sub = $('#filtros_FraccionId');
                if (ComboCnanged.length > 0) {
                    $.ajax({
                        url: "@Url.Action("GetFraccionByArticulosId", "Plantillas")",
                        dataType: "json",
                        type: "GET",
                        data: {
                            'iId': ComboCnanged
                        },
                        cache: false,
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                             console.log(data);
                            if (data.Encontro) {
                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                $.each(data.data, function (index, item) {
                                    Sub.append($('<option></option>').text(item.Nombre).val(item.FraccionId));
                                });
                                //ComboActivo.val(iiActivoId);
                                 HideLoading();

                            } else {

                                Sub.empty(); // remove any existing options
                                Sub.append($('<option value>Seleccione...</option>'));
                                 HideLoading();
                            }
                        },
                        error: function (error) {
                            console.log(error);
                              HideLoading();
                        }
                    });
                } else {
                    ComboActivo.empty(); // remove any existing options
                    Sub.append($('<option value>Seleccione...</option>'));
                    Sub.attr("title", "Sin datos seleccionados");
                    HideLoading();
                }

        });
         function descargarDatos(iPlantillaId,sFraccion) {
                ShowLoading();
                $('#modalDescargar').modal('hide');
                //listadoDatos
                $('#ModalDetailCampo').html("Plantilla: " + sFraccion);



                $.ajax({
                    url: "@Url.Action("GeListDownload")",
                    dataType: "json",
                    type: "POST",
                    data: {
                        PlantillaId: iPlantillaId
                    },
                    cache: false,
                    success: function (data) {
                        if (data.Hecho) {
                            $("#listadoDatosDescargar").html(data.Partial);
                            $('#modalDescargar').modal('show');
                        } else {
                            Swal.fire('Error', data.Mensaje, 'error');
                        }
                        HideLoading();
                    },
                    error: function (error) {
                        Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                        HideLoading();
                    }
                });

        }

        function ClonarPlantilla(vPlantillaId) {
            var msg = '¡Esta seguro que desea Clonar la plantilla';
            Swal.fire({
                title: 'Clonar plantilla',
                text: msg,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Clonar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {
                    $.post("@Url.Action("ClonarPlantilla", "Plantillas")", { plantillaId: vPlantillaId })
                        .done(function (data) {
                            if (data.Hecho == true) {

                                Swal.fire(
                                    '¡Se clnono la plantilla!',
                                    data.Mensaje,
                                    'success'
                                );
                            } else {
                                Swal.fire(
                                    '¡Ocurrio un error!',
                                    data.Mensaje,
                                    'success'
                                );
                            }

                        }).fail(function () {
                            Swal.fire(
                                'Error',
                                'Ocurrio un error al momento de clonar plantilla',
                                'error'
                            )
                        });

                }
            });

        }
    </script>
}

