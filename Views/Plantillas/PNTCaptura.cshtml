@using Transparencia.Models
@using Transparencia
@model List<Campo>
@{
    ViewBag.Title = "Captura de información de PNT para: ";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var plantillaId = (int)ViewBag.PlantillaId;
    //var lstCampos = Model ?? new List<Transparencia.Models.CampoViewModel>();
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Plantillas</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("AgregarCampos", "Plantillas")">Plantillas</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@ViewBag.Title <b>@ViewBag.Plantilla_name</b></strong>
            </li>
        </ol>
    </div>
</div>
<br />

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox-title">
        <p>
            <h2>@ViewBag.Title <b>@ViewBag.Plantilla_name</b></h2>
        </p>
    </div>

    @using (Ajax.BeginForm("AgregarCampo", "Plantillas", null, new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "Lista",
        OnBegin = "GuardarCampoBegin",
        OnSuccess = "CargarTablaCampos"
    }, htmlAttributes: new
    {
        @id = "frmAgregarCampo"
    }))
    {

        @Html.AntiForgeryToken()

        @Html.Hidden("plantillaId", plantillaId)
        <div class="ibox-content m-b-sm border-bottom">
            @if (ViewData["error"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewData["error"]
                </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-row">
            <div class="form-group col-md-4">
                <label for="AddTipoCampo">ID de plantilla PNT</label>
                @Html.Editor("idPlantillaPNT", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("idPlantillaPNT", "", new { @class = "text-danger" })
            </div>
            <hr />
            <h4>Campos totales: @Model?.Count()</h4>
            @if (Model != null && Model.Any())
            {
                var contador = 0;
                <table class="table table-striped" id="tCamposTableroTabla">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>
                                <label>Tipo de Campo</label>
                            </th>
                            <th>
                                <label>Nombre Campo</label>
                            </th>
                            <th>
                                <label>Etiqueta</label>
                            </th>
                            <th>
                                <label>Orden</label>
                            </th>
                            <th>
                                <label>ID CAMPO PNNT</label>
                            </th>
                            <th>
                                <label>ID TIPO CAMPO PNT</label>
                            </th>
                        </tr>

                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderBy(x => x.Orden))
                        {
                            contador++;


                        <tr>
                            <td>@contador</td>
                            <td>@item.TipoCampo</td>
                            <td>@item.Nombre</td>
                            <td>@item.Etiqueta</td>
                            <td>@item.Orden</td>
                            <td><input type="text" class="form-control" name="IdCampoPNT" id="IdCampoPNT" value="@item.IdCampoPNT" placeholder="ID del Campo PNT" /> </td>
                            <td><input type="text" class="form-control" name="IdTipoCampoPNT" id="IdTipoCampoPNT" value="@item.IdTipoCampoPNT" placeholder="ID Tipo de Campo PNT" /> </td>

                        </tr>


                        }
                    </tbody>
                </table>
            }
            
        </div>
        <div class="form-row">
            <div class="form-group col-md-12 text-right">
                <button id="btnLimpiar" type="button" class="btn btn-secondary" onclick="limpiar()">
                    <i class="fa fa-trash"></i> Limpiar
                </button>

                <button id="btnAgregaCampo2" type="button" class="btn btn-success">
                    <i class="fa fa-plus-square"></i> Guardar
                </button>
            </div>
        </div>
        </div>
    }

</div>


<!-- Modal -->
<div class="modal fade" id="ModalCambioOrden" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cambiar Orden del campo <b id="ModalCampoName">adssadas</b> </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group col-md-3">
                    <label for="ModalCampoOrden">Orden</label>
                    <input type="number" id="ModalCampoOrden" value="0" class="form-control" />
                    <input type="hidden" id="ModalCampoId" value="0" />

                </div>
                <div class="form-group col-md-12">
                    <p>Por favor, escribe el nuevo número de orden que tendra este campo.</p>
                </div>
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Regresar</button>
                <button type="button" id="btnGuardarModalOrden" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

<!--Modal para el campo -->
<div class="modal fade bd-example-modal-lg" id="ModalDetail" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Detalle del campo <b id="ModalDetailCampo"></b> </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="ListaDetails">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Regresar</button>
            </div>
        </div>
    </div>
</div>



@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/footableStyles")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css" />

}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/footable")
    <script type="text/javascript" src="~/Scripts/ConfigurarCampos.js"></script>
    <script src="~/Scripts/PaginadorOrder.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>

    <script>


        $(document).ready(function () {
             limpiar();
            $('.footable').footable();
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            //nuevas funciones
            $("#btnAgregaCampo2").click(function () {
                var Validar = $("#frmAgregarCampo").valid();
                if (Validar) {
                    ShowLoading();
                    var form = $("#frmAgregarCampo");
                     $.ajax({
                                url: "@Url.Action("AjaxAgregarCampo")",
                                dataType: "json",
                                type: "POST",
                                data: form.serialize(),
                                cache: false,
                         success: function (data) {
                             console.log(data.Hecho);
                             if (data.Hecho) {
                                 $("#Lista").html(data.Partial);
                                 limpiar();
                             } else {
                                 Swal.fire('Error', data.Mensaje, 'error');
                             }
                             HideLoading();
                         },
                         error: function (error) {
                             Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                             HideLoading();
                         }
                     });
                }
            });

             //Guardar ORden
            $("#btnGuardarModalOrden").click(function () {
                ShowLoading();
                $('#ModalCambioOrden').modal('hide');
                var Orden = $('#ModalCampoOrden').val();
                var CampoId = $('#ModalCampoId').val();
                var PlantillaId = $('#iId').val();

                $.ajax({
                    url: "@Url.Action("AjaxCambiarOrden")",
                    dataType: "json",
                    type: "POST",
                    data: {
                        iCampoId: CampoId,
                        iOrden: Orden,
                        iPlantillaId: PlantillaId
                    },
                    cache: false,
                     success: function (data) {
                         if (data.Hecho) {
                             $("#Lista").html(data.Partial);
                         } else {
                             Swal.fire('Error', data.Mensaje, 'error');
                         }
                        HideLoading();
                    },
                    error: function (error) {
                        Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                        HideLoading();
                    }
                });

            });


        });

            var DeleteCampo = function (CampoId, Tr) {

                Swal.fire({
                 title: '¿Esta seguro que desea eliminar el campo de la plantilla?',
                 text: 'Este campo de la plantilla se eliminara',
                icon: 'warning',
                showCancelButton: true,
                 confirmButtonText: 'Eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {
                    ShowLoading();
                    $.ajax({
                        url: "@Url.Action("AjaxEliminarCampo")",
                        dataType: "json",
                        type: "POST",
                        data: {
                            iCampoId: CampoId
                        },
                        cache: false,
                        success: function (data) {
                            if (data.Hecho) {
                                 //Entro pero veamos si tiene Observaciónes
                                if (data.Respuesta.length > 0) {

                                    Swal.fire({
                                        title: '¿Observaciones de la eliminación?',
                                        text: data.Respuesta,
                                        icon: 'warning',
                                        showCancelButton: true,
                                        confirmButtonText: 'Borrar datos y Continuar con la eliminación',
                                        cancelButtonText: 'Cancelar'
                                    }).then((result) => {
                                        if (result.value) {
                                            //$("#yaLoValido").val('true');
                                            PostElimminar(CampoId,Tr);

                                        }

                                    });

                                } else {
                                   $(Tr).remove();
                                }
                                
                            } else {
                                Swal.fire('Error', data.Mensaje, 'error');
                            }
                            HideLoading();
                        },
                        error: function (error) {
                            Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                            HideLoading();

                        }
                    });

                }
            });

        }

        function PostElimminar(CampoId,Tr) {
            //var form = $("#frmAgregarCampo");
            ShowLoading();
            $.ajax({
                url: "@Url.Action("AjaxEliminarCampo")",
                dataType: "json",
                type: "POST",
                data: {
                    iCampoId: CampoId,
                    yaLoValido: true
                },
                cache: false,
                success: function (data) {
                    if (data.Hecho) {
                        $(Tr).remove();
                    } else {
                        Swal.fire('Error', data.Mensaje, 'error');
                    }
                    HideLoading();

                },
                error: function (error) {
                    Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                    HideLoading();

                }
            });
        }

         var CambioOrden = function (CampoId,NombreCampo,Orden) {

             $('#ModalCampoOrden').val(Orden);
             $('#ModalCampoId').val(CampoId);
             $('#ModalCampoName').html(NombreCampo);
             $('#ModalCambioOrden').modal('show');
        }

         //modificartCampos
        function ModificarCampo(iCampoId) {
            ShowLoading();
            $.ajax({
                url: "@Url.Action("GetCampoById")",
                dataType: "json",
                type: "POST",
                data: {
                    iId: iCampoId
                },
                cache: false,
                success: function (data) {
                    console.log(data);
                    if (data.Hecho) {
                        UpdatePhase(data.Campo);
                    } else {
                        Swal.fire('Error', data.Mensaje, 'error');
                    }
                    HideLoading();
                },
                error: function (error) {
                    Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                    HideLoading();
                }
            });
        }
        function UpdatePhase(mCampo) {


            try {
                limpiar();
                $("#AddTipoCampo").val(mCampo.TipoCampo).trigger('change');
                //campos
                $("#AddNombre").val(mCampo.Nombre);
                $("#AddEtiqueta").val(mCampo.Etiqueta);
                $("#AddLongitud").val(mCampo.Longitud);
                $("#AddAyuda").val(mCampo.Ayuda);
                $("#AddRequerido").iCheck(mCampo.Requerido == true ? 'check' : 'uncheck');
                $("#AddRelevante").iCheck( mCampo.relevantes == true ? 'check' : 'uncheck');
                $("#AddPrincipal").iCheck(  mCampo.Principal == true ? 'check' : 'uncheck');
                $("#AddConDecimales").iCheck( mCampo._ConDecimales == true ? 'check' : 'uncheck');
                $("#AddTipoFecha").val(mCampo._TipoFecha);
                $("#AddGrupoExtensionId").val(mCampo._GrupoExtensionId);
                $("#AddSize").val(mCampo._Size);
                $("#AddCatalogoId").val(mCampo.CatalogoId);
                $("#AddCampoPNT").val(mCampo.IdCampoPNT);
                $("#AddTipoCampoPNT").val(mCampo.IdTipoCampoPNT);
                $('.selectpicker').selectpicker('refresh');
                $("#CampoId").val(mCampo.CampoId);
                $('html,body').animate({
                    scrollTop: $("html").offset().top
                }, 'slow');
                $("#btnAgregaCampo2").hide();
                $("#btnEditarCampo").show();


            }
            catch (error) {
                limpiar();
                Swal.fire('Error', 'Ocurrio un error al momento posicionar el campo - ' + error.responseText, 'error');
            }

        }




        $("#btnEditarCampo").click(function () {
            var Validar = $("#frmAgregarCampo").valid();
             $("#yaLoValido").val('false');
                if (Validar) {
                    ShowLoading();
                    var form = $("#frmAgregarCampo");
                     $.ajax({
                                url: "@Url.Action("AjaxModificarCampo")",
                                dataType: "json",
                                type: "POST",
                                data: form.serialize(),
                                cache: false,
                         success: function (data) {

                             if (data.Hecho) {
                                 //Entro pero veamos si tiene Observaciónes
                                 if (data.Respuesta.length > 0) {

                                     Swal.fire({
                                         title: '¿Observaciones de la modificación?',
                                         text: data.Respuesta,
                                         icon: 'warning',
                                         showCancelButton: true,
                                         confirmButtonText: 'Borrar y continuar con la modificación',
                                         cancelButtonText: 'Cancelar'
                                     }).then((result) => {
                                         if (result.value) {
                                              $("#yaLoValido").val('true');
                                             PostModificar(result);
                                         }

                                     });

                                 } else {
                                     $("#Lista").html(data.Partial);
                                      limpiar();
                                 }


                             } else {
                                 Swal.fire('Error', data.Mensaje, 'error');
                             }
                             HideLoading();
                         },
                         error: function (error) {
                             Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                             HideLoading();
                         }
                     });
                }
        });

        function PostModificar() {
            var form = $("#frmAgregarCampo");
                ShowLoading();
                $.ajax({
                    url: "@Url.Action("AjaxModificarCampo")",
                    dataType: "json",
                    type: "POST",
                    data: form.serialize(),
                    cache: false,
                    success: function (data) {
                        console.log(data);
                        if (data.Hecho) {
                            $("#Lista").html(data.Partial);
                            limpiar();
                        } else {
                            Swal.fire('Error', data.Mensaje, 'error');
                        }
                        HideLoading();

                    },
                    error: function (error) {
                        Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                        HideLoading();

                    }
                });
        }




         function DetallesCampo(iCampoId) {
            ShowLoading();
            $.ajax({
                url: "@Url.Action("GetDetailCapo")",
                dataType: "json",
                type: "POST",
                data: {
                    iId: iCampoId
                },
                cache: false,
                success: function (data) {
                    if (data.Hecho) {
                        $("#ListaDetails").html(data.Partial);
                         $('#ModalDetail').modal('show');
                    } else {
                        Swal.fire('Error', data.Mensaje, 'error');
                    }
                    HideLoading();
                },
                error: function (error) {
                    Swal.fire('Error', 'Ocurrio un error al momento de eliminar el campo - ' + error.responseText, 'error');
                    HideLoading();
                }
            });
        }


        //limpiar


        //function limpiar() {
        //    ShowLoading();
        //    $("#btnAgregaCampo2").show();
        //    $("#btnEditarCampo").hide();
        //    $('#frmAgregarCampo')[0].reset();
        //    //$('input:checkbox').removeAttr('checked');
        //    $('.icheckbox_square-green').removeClass('checked');
        //    $("#yaLoValido").val('false');
        //    HideLoading();
        //}
        function limpiar() {
            ShowLoading();
            $('#frmAgregarCampo')[0].reset();
            //$('input:checkbox').removeAttr('checked');
            $('.icheckbox_square-green').removeClass('checked');
            $("#AddCatalogoId").val('default');
            $("#AddCatalogoId").selectpicker("refresh");
            $("#AddGrupoExtensionId").val('default');
            $("#AddGrupoExtensionId").selectpicker("refresh");
            $("#divCatalogos").hide();
            $("#divGpoExtensiones").hide();
            $("#divSize").hide();
            $("#divTipoFecha").hide();
            $("#divLongitud").show();
            $("#btnEditarCampo").hide();
            $("#btnAgregaCampo2").show();
            $("#yaLoValido").val('false');
            HideLoading();
        }
            

    </script>
}
