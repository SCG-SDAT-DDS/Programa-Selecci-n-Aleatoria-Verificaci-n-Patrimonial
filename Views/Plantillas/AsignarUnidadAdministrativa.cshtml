@model List<Transparencia.Models.DependenciasVModel>
@{
    ViewBag.Title = "Asignar/Desasignar a Unidad Administrativa";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var plantillaId = (int)ViewBag.PlantillaId;
    var NombrePlantilla = ViewBag.PlantillaNombre ?? "Plantilla no especificada";
    var LstDependenciasExist = ViewBag.lstUnidadAdministrativaPlantillas as List<Transparencia.Models.PlantillaUnidadAdministrativa>;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Plantillas</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Asignar", "Plantillas")">Plantillas</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
</div>
<br />

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox-title">
        <p>
            <h2>@ViewBag.Title a la plantilla @NombrePlantilla</h2>
        </p>
    </div>
    @using (Html.BeginForm("AsignacionUnidadAdministrativa", null, FormMethod.Post, htmlAttributes: new { @id = "frmCrear" }))
    {
        @Html.AntiForgeryToken()

        @Html.Hidden("idPlantilla", plantillaId)

        <div class="card border-0 box-shadow border-radius">
            @if (ViewData["error"] != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewData["error"]
                </div>
            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="i-checks" id="dCheckAll" style="display:none;">
                <input type="checkbox" id="cbAll" />
                <label class="control-label" for="cbAll">Todos</label>
            </div>
            <div class="card-body ibox-content">
                <div class="IndexList row center">
                    @if (Model != null && Model.Any())
                    {

                        int iRowsInserted = 0;
                        string sRow = "";
                        var vLastRow = Model.LastOrDefault();
                        foreach (var item in Model)
                        {
                            string sChecked = LstDependenciasExist.Any(r => r.UnidadAdministrativaId == item.Id) ? "checked" : "";

                            <div class="col-md-4 mb-2">
                                <section class="section-preview">

                                    <!-- Default checked -->
                                    <div class="custom-control custom-checkbox pointer">
                                        <input name="lstUnidadesAdministrativas" type="checkbox" class="custom-control-input" id="@item.Id" @sChecked value="@item.Id" onclick="asignarUA(this);">
                                        <label class="custom-control-label" for="@item.Id">@item.Nombre</label><br />
                                    </div>

                                </section>
                            </div>



                            //var sChecked = "";
                            //string sCheckBox = @"<div class='checkbox checkbox-success'>
                            //        <input name='lstClavesEscuelas' class='clave-escuela' type='checkbox' " + sChecked + " id='" + item.Id + "' value='" + item.Id + "' />" +
                            //                            "<label class='control-label' for='" + item.Id + "'>" + item.Nombre + "</label>" +
                            //                    "</div>";

                            @*string sCheckBox2 = @"<div class='i-checks'>
                                            <input name='lstUnidadesAdministrativas' type='checkbox' " + sChecked + " id='" + item.Id + "' value='" + item.Id + "' /> " +
                                                      "<label class='form-check-label' for='" + item.Id + "'> " +
                                                      item.Nombre +
                                                      "</label>" +
                                                "</div>";


                            sRow += iRowsInserted == 0 ? "<div class='row'>" : "";
                            sRow += "<div class='col-md-4'>" + sCheckBox2 + "</div>";
                            iRowsInserted++;
                            sRow += iRowsInserted == 3 ? "</div>" : "";

                            if (iRowsInserted == 3 || item == vLastRow)
                            {
                                if (iRowsInserted != 3)
                                {
                                    switch (iRowsInserted)
                                    {
                                        case 1:
                                            sRow += "<div class='col-md-4'></div><div class='col-md-4'></div></div>";
                                            break;
                                        case 2:
                                            sRow += "<div class='col-md-4'></div></div>";
                                            break;
                                    }
                                }
                                @Html.Raw(sRow)
                                iRowsInserted = 0;
                                sRow = "";
                            }*@
                        }
                    }
                </div>
            </div>
            <div class="form-group col-md-12 text-right">
                <a id="aRegresar" href="@Url.Action("Index")" class="btn btn-secondary"><i class="fa fa-arrow-left"></i> Regresar</a>
                <button id="btnAgregaCampo" type="submit" class="btn btn-warning">
                    <i class="fa fa-plus-square"></i> Agregar
                </button>

            </div>
        </div>
    }

</div>


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/footableStyles")
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/footable")

    <script>
        var vMensaje = "@Html.Raw(TempData["Mensaje"])";
        if (vMensaje.length > 0)
        {
            Swal.fire('¡Aviso!', vMensaje,'success');
        }

        $("#frmCrear").submit(function () {
            ShowLoading();

            
            
            return true;
        });

        $(document).ready(function () {

            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });
    </script>
}
