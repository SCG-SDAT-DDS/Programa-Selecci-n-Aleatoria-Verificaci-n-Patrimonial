@model Transparencia.Models.RolViewModel

@{
    ViewBag.Title = "Modificar Rol";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Name)

        <div class="row wrapper border-bottom white-bg page-heading">
            <div class="col-lg-10">
                <h2>@ViewBag.Title</h2>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">Inicio</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("ListaRoles", "RolesAdmin")">Lista de Roles</a>
                    </li>
                    <li class="active breadcrumb-item">
                        <strong>@ViewBag.Title</strong>
                    </li>
                </ol>
            </div>
        </div>
        <br />

        <div class="ibox">
            <div class="ibox-title">
                <p>
                    <h2>@ViewBag.Title</h2>
                </p>
            </div>

            <div class="ibox-content">
                <div class="form-group">
                    @Html.Label("Rol", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        <p class="form-control-static">
                            @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </p>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FechaDesde, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = "form-control datefield", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.FechaDesde, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FechaHasta, htmlAttributes: new {@id = "fDesde", @class = "control-label col-md-2" })
                    @*<div class="col-md-10">
            @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control datefield", @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
        </div>*@

                    <div class="col-md-10">
                        <div class="input-group date">
                            @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = "form-control datefield", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.FechaHasta, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="i-checks">
                            @Html.EditorFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-w-m btn-primary" />
                        @Html.ActionLink("Regresar", "ListaRoles", null, new { @class = "btn btn-w-m btn-secondary" })
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@section AddToTop {
    @*@Styles.Render("~/Content/jqueryUI")*@
}

@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/dataPickerStyles")

}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/plugins/dataPicker")

    <script src="~/Scripts/UsuariosRoles.js"></script>

    @Scripts.Render("~/plugins/iCheck")


    <script>
        $(document).ready(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $('#FechaDesde').datepicker({
                language: "es",
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: false,
                autoclose: true
            });

            $('#FechaHasta').datepicker({
                language: "es",
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: false,
                autoclose: true
            });
        });
    </script>
}
