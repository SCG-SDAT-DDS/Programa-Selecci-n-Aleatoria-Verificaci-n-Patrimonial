@model Transparencia.Models.TipoInput

@{
    ViewBag.Title = "Modificar tipo de input";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TipoInputId)

        <div class="row wrapper border-bottom white-bg page-heading">
            <div class="col-lg-10">
                <h2>@ViewBag.Title</h2>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">Inicio</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "TipoInputs")">Tipo de Input</a>
                    </li>
                    <li class="active breadcrumb-item">
                        <strong>@ViewBag.Title</strong>
                    </li>
                </ol>
            </div>
        </div>
        <br />

        <div class="ibox">
            <div class="ibox-title">
                <p>
                    <h2>@ViewBag.Title</h2>
                </p>
            </div>

            <div class="ibox-content">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ayuda, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ayuda, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ayuda, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Orden, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Orden, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Orden, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="i-checks">
                            @Html.EditorFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-w-m btn-primary" />
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-w-m btn-secondary" })
                    </div>
                </div>
                <br />
            </div>
        </div>

    </div>
}


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}

@section scripts {
    @Scripts.Render("~/plugins/iCheck")


    <script>
        $(document).ready(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
        });
    </script>
}