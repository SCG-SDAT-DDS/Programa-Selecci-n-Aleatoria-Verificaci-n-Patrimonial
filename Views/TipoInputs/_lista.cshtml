@model PagedList<Transparencia.Models.TipoInput>

@{
    FiltrosCatalogos filtros = ViewBag.Filtros != null ? ViewBag.Filtros as FiltrosCatalogos : new FiltrosCatalogos();
}

<div id="lista">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderNombre">  @Html.DisplayNameFor(model => model.FirstOrDefault().Nombre) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderOrden">  @Html.DisplayNameFor(model => model.FirstOrDefault().Orden) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderActivo">  @Html.DisplayNameFor(model => model.FirstOrDefault().Activo) <i class="fa fa-sort"></i> </label>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Orden)
                </td>
                <td>
                    @if (item.Activo)
                    {
                        <span class="label label-primary BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "TipoInputs")',@item.TipoInputId)">Activo</span>
                    }
                    else
                    {
                        <span class="label label-danger BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "TipoInputs")',@item.TipoInputId)">Inactivo</span>
                    }
                </td>
                <td>
                    @Html.ActionLink("Modificar", "Edit", new { id = item.TipoInputId }, new { @class = "btn btn-w-m btn-warning btn-xs" })
                    @Html.ActionLink("Detalles", "Details", new { id = item.TipoInputId }, new { @class = "btn btn-w-m btn-info btn-xs" })
                </td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6">
                    <label>@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>

                    <div id="pagedList" class="pagedList" data-otf-target="#lista">

                        @Html.PagedListPager(Model, iPagina => Url.Action("Index", new { iPagina, PerPage = ViewBag.PerPage, sOrder = ViewBag.Order, Nombre = filtros.Nombre, Activo = filtros.Activo }), PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                        new AjaxOptions
                        {
                            HttpMethod = "get",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "lista",
                            OnBegin = "BeginClient",
                            OnComplete = "CompleteClient"
                        }))
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>
