
@model PagedList<Transparencia.Models.GrupoExtension>

@{
    FiltrosCatalogos filtros = ViewBag.Filtros != null ? ViewBag.Filtros as FiltrosCatalogos : new FiltrosCatalogos();
}
<div id="listaGrupoExtension">
    <p>
        @Html.ActionLink("Nuevo Grupo de Extension", "Create", null, new { @class = "btn btn-w-m btn-primary" })
    </p>

    <table class="table table-striped ">
        <thead>
            <tr>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderNombre">  @Html.DisplayNameFor(model => model.FirstOrDefault().Nombre) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderDescripcion">  @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderActivo">  @Html.DisplayNameFor(model => model.FirstOrDefault().Activo) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    Acciones
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @if (item.Activo)
                    {
                        <span class="label label-primary BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "GrupoExtensiones")',@item.GrupoExtensionId)">Activo</span>
                    }
                    else
                    {
                        <span class="label label-danger BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "GrupoExtensiones")',@item.GrupoExtensionId)">Inactivo</span>
                    }
                </td>
                <td>
                    <div class="btn-group">
                        @Html.ActionLink("Modificar", "Edit", new { id = item.GrupoExtensionId }, new { @class = "btn-white btn btn-xs" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.GrupoExtensionId }, new { @class = "btn-white btn btn-xs" })
                    </div>
                </td>
            </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td>
                    <div class="form-group row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <label>
                                Mostrar
                                <select class="input-sm filtrar" name="PerPage" id="mostrar">
                                    <option value="10">10</option>
                                    <option value="25">25</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                </select>
                                Registros
                            </label>
                        </div>
                    </div>
                </td>
                <td colspan="7">
                    <div class="pagination float-right">
                        <label style="padding: 5px 10px;">@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>
                        <br />
                        <div id="pagedList" class="pagedList" data-otf-target="#listaOrganismos">

                            @Html.PagedListPager(Model, iPagina => Url.Action("Index", new
                            {
                                iPagina,
                            PerPage = ViewBag.PerPage,
                            sOrder = ViewBag.Order,
                            Nombre = filtros.Nombre,
                            Descripcion = filtros.Descripcion,
                            Activo = filtros.Activo
                            }),
                                 PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                                 new AjaxOptions
                                 {
                                     HttpMethod = "get",
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = "listaOrganismos",
                                    OnBegin = "BeginClient",
                                    OnComplete = "CompleteClient"
                            }))
                        </div>
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>




@*<div id="">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderNombre">  @Html.DisplayNameFor(model => model.FirstOrDefault().Nombre) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderDescripcion">  @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion) <i class="fa fa-sort"></i> </label>
                </th>
                <th>
                    <label onclick="OrderBy(this)" order="@ViewBag.OrderActivo">  @Html.DisplayNameFor(model => model.FirstOrDefault().Activo) <i class="fa fa-sort"></i> </label>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descripcion)
                    </td>
                    <td>
                        @if (item.Activo)
                        {
                            <span class="label label-primary BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "GrupoExtensiones")',@item.GrupoExtensionId)">Activo</span>
                        }
                        else
                        {
                            <span class="label label-danger BadgeStatus" onclick="changeStatus(this,'@Url.Action("changeStatus", "GrupoExtensiones")',@item.GrupoExtensionId)">Inactivo</span>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Modificar", "Edit", new { id = item.GrupoExtensionId }, new { @class = "btn btn-w-m btn-warning btn-xs" })
                        @Html.ActionLink("Detalles", "Details", new { id = item.GrupoExtensionId }, new { @class = "btn btn-w-m btn-info btn-xs" })
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6">
                    <label>@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>

                    <div id="pagedList" class="pagedList" data-otf-target="#listaGrupoExtension">

                        @Html.PagedListPager(Model, iPagina => Url.Action("Index", new
                        {
                            iPagina,
                            PerPage = ViewBag.PerPage,
                            sOrder = ViewBag.Order,
                            Nombre = filtros.Nombre,
                            Descripcion = filtros.Descripcion,
                            Activo = filtros.Activo
                        }), PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                             new AjaxOptions
                             {
                                 HttpMethod = "get",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "listaGrupoExtension",
                            OnBegin = "BeginClient",
                            OnComplete = "CompleteClient"
                        }))
                    </div>
                </td>
            </tr>
        </tfoot>
    </table>
</div>*@
