@model IEnumerable<Transparencia.Models.VMCampos>

@{
    FiltrosCatalogos filtros = ViewBag.Filtros != null ? ViewBag.Filtros as FiltrosCatalogos : new FiltrosCatalogos();
}

    <div id="lista">
        @*<p>
            @Html.ActionLink("Nuevo Catálogo", "Create", null, new { @class = "btn btn-w-m btn-primary" })
        </p>*@
        <hr />

        <table class="table table-striped ">
            <thead>
                <tr>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.FechaCreacion"> Fecha creación <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.sPrincipal"> @ViewBag.sPrincipal <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        <label onclick="OrderBy(this)" order="@ViewBag.OrderActivo">  Estatus <i class="fa fa-sort"></i> </label>
                    </th>
                    <th>
                        Acciones
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SFechaCreacion)
                        </td>
                        <td>
                            @Html.Raw(item.DatoPrincipal)
                            @*@Html.DisplayFor(modelItem => item.DatoPrincipal)*@
                        </td>
                        <td>
                            @if (item.Activo == true)
                            {
                                <span class="label label-primary BadgeStatus" onclick="changeStatusDynamic(this,'@Url.Action("changeStatusDynamic", "Catalogos")',@item.TablaFisicaId,'@item.TablaNombre')">Activo</span>
                            }
                            else
                            {
                                <span class="label label-danger BadgeStatus" onclick="changeStatusDynamic(this,'@Url.Action("changeStatusDynamic", "Catalogos")',@item.TablaFisicaId,'@item.TablaNombre')">Inactivo</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group">
                                <a href="@Url.Action("EditDynamic", new { id = item.TablaFisicaId,iCatalogoId = item.CatalogoId, TablaNombre = item.TablaNombre })" class="btn btn-warning btn-circle" title="Editar"><i class="fa fa-pencil-square"></i></a>
                                <a href="@Url.Action("DetailDynamic", new { id = item.TablaFisicaId, iCatalogoId = item.CatalogoId, TablaNombre = item.TablaNombre })" class="btn btn-info btn-circle" title="Detalles"><i class="fa fa-info-circle"></i></a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    @*<td>
                        <div class="form-group row">
                            <div class="col-md-12 col-sm-12 col-xs-12">
                                <label>
                                    Mostrar
                                    <select class="input-sm filtrar" name="PerPage" id="mostrar">
                                        <option value="10">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                    Registros
                                </label>
                            </div>
                        </div>
                    </td>*@
                    @*<td colspan="7">
                        <div class="pagination float-right">
                            <label style="padding: 5px 10px;">@(Model.LastItemOnPage > 0 ? Model.FirstItemOnPage : 0) - @Model.LastItemOnPage de @Model.TotalItemCount Registros</label>
                            <br />
                            <div id="pagedList" class="pagedList" data-otf-target="#lista">

                                @Html.PagedListPager(Model, iPagina => Url.Action("Index", new
                                {
                                   iPagina, 
                                   PerPage = ViewBag.PerPage, 
                                   sOrder = ViewBag.Order, 
                                   Nombre = filtros.Nombre, 
                                   Descripcion = filtros.Descripcion, 
                                   Activo = filtros.Activo 

                                }),
                                     PagedList.Mvc.PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                                     new AjaxOptions
                                     {
                                       HttpMethod = "get",
                                       InsertionMode = InsertionMode.Replace,
                                       UpdateTargetId = "lista",
                                       OnBegin = "BeginClient",
                                       OnComplete = "CompleteClient"
                                }))
                            </div>
                        </div>
                    </td>*@
                </tr>
            </tfoot>
        </table>
    </div>
