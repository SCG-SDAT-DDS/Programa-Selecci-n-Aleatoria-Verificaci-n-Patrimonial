@model Transparencia.Models.TipoOtraInformacion

@{
    bool Administrador = ((bool)(ViewBag.Administrador ?? false));
    ViewBag.Title = "Modificar Tipo Otra Información";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.TipoOtraInformacionId)
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h2>@ViewBag.Title</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">Inicio</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "TipoOtraInformacion")">Tipo Otra información</a>
                </li>
                <li class="active breadcrumb-item">
                    <strong>@ViewBag.Title</strong>
                </li>
            </ol>
        </div>
    </div>
    <br />

    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title">
                <p>
                    <h2>@ViewBag.Title</h2>
                </p>
            </div>

            <div class="ibox-content">
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Descripcion, 5, 0, htmlAttributes: new { @class = "form-control", @placeholder = "Descripción" })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-3">
                        @Html.Label("Activo", htmlAttributes: new { @class = "control-label" })
                        <div class="i-checks">
                            @Html.CheckBoxFor(model => model.Activo)
                            @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />

                    <div class="form-group text-right">
                        <div class="col-md-offset-2 col-md-12">
                            @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-w-m btn-secondary" })
                            <input type="submit" value="Guardar" class="btn btn-w-m btn-primary" />

                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}

@section scripts {
    @Scripts.Render("~/plugins/iCheck")

    @*<script src="~/Scripts/ciudades.js"></script>*@

    <script>
        $(document).ready(function () {
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });
            $('.select2').select2();
        });
    </script>

}